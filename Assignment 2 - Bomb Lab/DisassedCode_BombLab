Phase 1: 

(gdb) disas phase_1
Dump of assembler code for function phase_1:
   0x0000000000002615 <+0>:     endbr64 
   0x0000000000002619 <+4>:     sub    $0x18,%rsp
   0x000000000000261d <+8>:     mov    %fs:0x28,%rax
   0x0000000000002626 <+17>:    mov    %rax,0x8(%rsp)
   0x000000000000262b <+22>:    xor    %eax,%eax
   0x000000000000262d <+24>:    lea    0x4(%rsp),%rdx
   0x0000000000002632 <+29>:    lea    0x1b95(%rip),%rsi        # 0x41ce
   0x0000000000002639 <+36>:    call   0x2330 <__isoc99_sscanf@plt>
   0x000000000000263e <+41>:    cmp    $0x1,%eax
   0x0000000000002641 <+44>:    jne    0x2677 <phase_1+98>
   0x0000000000002643 <+46>:    mov    0x4(%rsp),%eax
   0x0000000000002647 <+50>:    cmp    $0x3c,%eax
   0x000000000000264a <+53>:    je     0x267e <phase_1+105>
   0x000000000000264c <+55>:    cmp    $0x3b,%eax
   0x000000000000264f <+58>:    jg     0x268e <phase_1+121>
   0x0000000000002651 <+60>:    add    $0x7,%eax
   0x0000000000002654 <+63>:    cmp    $0x3b,%eax
   0x0000000000002657 <+66>:    jle    0x2651 <phase_1+60>
   0x0000000000002659 <+68>:    mov    %eax,0x4(%rsp)
   0x000000000000265d <+72>:    cmp    $0x3c,%eax
   0x0000000000002660 <+75>:    jne    0x268e <phase_1+121>
   0x0000000000002662 <+77>:    mov    0x8(%rsp),%rax
   0x0000000000002667 <+82>:    sub    %fs:0x28,%rax
   0x0000000000002670 <+91>:    jne    0x2695 <phase_1+128>
   0x0000000000002672 <+93>:    add    $0x18,%rsp
   0x0000000000002676 <+97>:    ret    
   0x0000000000002677 <+98>:    call   0x2dbe <explode_bomb>
   0x000000000000267c <+103>:   jmp    0x2643 <phase_1+46>
   0x000000000000267e <+105>:   call   0x2dbe <explode_bomb>
   0x0000000000002683 <+110>:   mov    0x4(%rsp),%eax
   0x0000000000002687 <+114>:   cmp    $0x3b,%eax
   0x000000000000268a <+117>:   jle    0x2651 <phase_1+60>
   0x000000000000268c <+119>:   jmp    0x265d <phase_1+72>
   0x000000000000268e <+121>:   call   0x2dbe <explode_bomb>
   0x0000000000002693 <+126>:   jmp    0x2662 <phase_1+77>
   0x0000000000002695 <+128>:   call   0x2280 <__stack_chk_fail@plt>
End of assembler dump.



Phase 2: 

(gdb) disas phase_2
Dump of assembler code for function phase_2:
   0x000000000000269a <+0>:     endbr64 
   0x000000000000269e <+4>:     push   %rbp
   0x000000000000269f <+5>:     push   %rbx
   0x00000000000026a0 <+6>:     sub    $0x28,%rsp
   0x00000000000026a4 <+10>:    mov    %fs:0x28,%rax
   0x00000000000026ad <+19>:    mov    %rax,0x18(%rsp)
   0x00000000000026b2 <+24>:    xor    %eax,%eax
   0x00000000000026b4 <+26>:    mov    %rsp,%rsi
   0x00000000000026b7 <+29>:    call   0x2e00 <read_six_numbers>
   0x00000000000026bc <+34>:    cmpl   $0x0,(%rsp)
   0x00000000000026c0 <+38>:    js     0x26cc <phase_2+50>
   0x00000000000026c2 <+40>:    mov    %rsp,%rbp
   0x00000000000026c5 <+43>:    mov    $0x5,%ebx
   0x00000000000026ca <+48>:    jmp    0x26df <phase_2+69>
   0x00000000000026cc <+50>:    call   0x2dbe <explode_bomb>
   0x00000000000026d1 <+55>:    jmp    0x26c2 <phase_2+40>
   0x00000000000026d3 <+57>:    add    $0x4,%rbp
   0x00000000000026d7 <+61>:    add    $0x5,%ebx
   0x00000000000026da <+64>:    cmp    $0x1e,%ebx
   0x00000000000026dd <+67>:    je     0x26f0 <phase_2+86>
   0x00000000000026df <+69>:    mov    %ebx,%eax
   0x00000000000026e1 <+71>:    add    0x0(%rbp),%eax
   0x00000000000026e4 <+74>:    cmp    %eax,0x4(%rbp)
   0x00000000000026e7 <+77>:    je     0x26d3 <phase_2+57>
   0x00000000000026e9 <+79>:    call   0x2dbe <explode_bomb>
   0x00000000000026ee <+84>:    jmp    0x26d3 <phase_2+57>
   0x00000000000026f0 <+86>:    mov    0x18(%rsp),%rax
   0x00000000000026f5 <+91>:    sub    %fs:0x28,%rax
   0x00000000000026fe <+100>:   jne    0x2707 <phase_2+109>
   0x0000000000002700 <+102>:   add    $0x28,%rsp
   0x0000000000002704 <+106>:   pop    %rbx
   0x0000000000002705 <+107>:   pop    %rbp
   0x0000000000002706 <+108>:   ret    
   0x0000000000002707 <+109>:   call   0x2280 <__stack_chk_fail@plt>
End of assembler dump.

Phase 3: 

(gdb) disas phase_3
Dump of assembler code for function phase_3:
   0x000000000000270c <+0>:     endbr64 
   0x0000000000002710 <+4>:     sub    $0x18,%rsp
   0x0000000000002714 <+8>:     mov    %fs:0x28,%rax
   0x000000000000271d <+17>:    mov    %rax,0x8(%rsp)
   0x0000000000002722 <+22>:    xor    %eax,%eax
   0x0000000000002724 <+24>:    lea    0x4(%rsp),%rcx
   0x0000000000002729 <+29>:    mov    %rsp,%rdx
   0x000000000000272c <+32>:    lea    0x1a98(%rip),%rsi        # 0x41cb
   0x0000000000002733 <+39>:    call   0x2330 <__isoc99_sscanf@plt>
   0x0000000000002738 <+44>:    cmp    $0x1,%eax
   0x000000000000273b <+47>:    jle    0x2757 <phase_3+75>
   0x000000000000273d <+49>:    cmpl   $0x7,(%rsp)
   0x0000000000002741 <+53>:    ja     0x27a8 <phase_3+156>
   0x0000000000002743 <+55>:    mov    (%rsp),%eax
   0x0000000000002746 <+58>:    lea    0x1a87(%rip),%rdx        # 0x41d4
   0x000000000000274d <+65>:    movslq (%rdx,%rax,4),%rax
   0x0000000000002751 <+69>:    add    %rdx,%rax
   0x0000000000002754 <+72>:    notrack jmp *%rax
   0x0000000000002757 <+75>:    call   0x2dbe <explode_bomb>
   0x000000000000275c <+80>:    jmp    0x273d <phase_3+49>
   0x000000000000275e <+82>:    mov    $0x385,%eax
   0x0000000000002763 <+87>:    cmp    %eax,0x4(%rsp)
   0x0000000000002767 <+91>:    jne    0x27bb <phase_3+175>
   0x0000000000002769 <+93>:    mov    0x8(%rsp),%rax
   0x000000000000276e <+98>:    sub    %fs:0x28,%rax
   0x0000000000002777 <+107>:   jne    0x27c2 <phase_3+182>
   0x0000000000002779 <+109>:   add    $0x18,%rsp
   0x000000000000277d <+113>:   ret    
   0x000000000000277e <+114>:   mov    $0x342,%eax
   0x0000000000002783 <+119>:   jmp    0x2763 <phase_3+87>
   0x0000000000002785 <+121>:   mov    $0x369,%eax
   0x000000000000278a <+126>:   jmp    0x2763 <phase_3+87>
   0x000000000000278c <+128>:   mov    $0x392,%eax
   0x0000000000002791 <+133>:   jmp    0x2763 <phase_3+87>
   0x0000000000002793 <+135>:   mov    $0xd2,%eax
   0x0000000000002798 <+140>:   jmp    0x2763 <phase_3+87>
   0x000000000000279a <+142>:   mov    $0x6f,%eax
   0x000000000000279f <+147>:   jmp    0x2763 <phase_3+87>
   0x00000000000027a1 <+149>:   mov    $0x229,%eax
   0x00000000000027a6 <+154>:   jmp    0x2763 <phase_3+87>
   0x00000000000027a8 <+156>:   call   0x2dbe <explode_bomb>
   0x00000000000027ad <+161>:   mov    $0x0,%eax
   0x00000000000027b2 <+166>:   jmp    0x2763 <phase_3+87>
   0x00000000000027b4 <+168>:   mov    $0x204,%eax
   0x00000000000027b9 <+173>:   jmp    0x2763 <phase_3+87>
   0x00000000000027bb <+175>:   call   0x2dbe <explode_bomb>
   0x00000000000027c0 <+180>:   jmp    0x2769 <phase_3+93>
   0x00000000000027c2 <+182>:   call   0x2280 <__stack_chk_fail@plt>
End of assembler dump.

Phase 4: 

(gdb) disas phase_4
Dump of assembler code for function phase_4:
   0x0000000000002808 <+0>:     endbr64 
   0x000000000000280c <+4>:     sub    $0x18,%rsp
   0x0000000000002810 <+8>:     mov    %fs:0x28,%rax
   0x0000000000002819 <+17>:    mov    %rax,0x8(%rsp)
   0x000000000000281e <+22>:    xor    %eax,%eax
   0x0000000000002820 <+24>:    lea    0x4(%rsp),%rcx
   0x0000000000002825 <+29>:    mov    %rsp,%rdx
   0x0000000000002828 <+32>:    lea    0x199c(%rip),%rsi        # 0x41cb
   0x000000000000282f <+39>:    call   0x2330 <__isoc99_sscanf@plt>
   0x0000000000002834 <+44>:    cmp    $0x2,%eax
   0x0000000000002837 <+47>:    jne    0x283f <phase_4+55>
   0x0000000000002839 <+49>:    cmpl   $0xe,(%rsp)
   0x000000000000283d <+53>:    jbe    0x2844 <phase_4+60>
   0x000000000000283f <+55>:    call   0x2dbe <explode_bomb>
   0x0000000000002844 <+60>:    mov    $0xe,%edx
   0x0000000000002849 <+65>:    mov    $0x0,%esi
   0x000000000000284e <+70>:    mov    (%rsp),%edi
   0x0000000000002851 <+73>:    call   0x27c7 <func4>
   0x0000000000002856 <+78>:    cmp    $0x6,%eax
   0x0000000000002859 <+81>:    jne    0x2862 <phase_4+90>
   0x000000000000285b <+83>:    cmpl   $0x6,0x4(%rsp)
   0x0000000000002860 <+88>:    je     0x2867 <phase_4+95>
   0x0000000000002862 <+90>:    call   0x2dbe <explode_bomb>
   0x0000000000002867 <+95>:    mov    0x8(%rsp),%rax
   0x000000000000286c <+100>:   sub    %fs:0x28,%rax
   0x0000000000002875 <+109>:   jne    0x287c <phase_4+116>
   0x0000000000002877 <+111>:   add    $0x18,%rsp
   0x000000000000287b <+115>:   ret    
   0x000000000000287c <+116>:   call   0x2280 <__stack_chk_fail@plt>
End of assembler dump.

Phase 5: 

(gdb) disas phase_5
Dump of assembler code for function phase_5:
   0x00000000000028cc <+0>:     endbr64 
   0x00000000000028d0 <+4>:     sub    $0x38,%rsp
   0x00000000000028d4 <+8>:     mov    %fs:0x28,%rax
   0x00000000000028dd <+17>:    mov    %rax,0x28(%rsp)
   0x00000000000028e2 <+22>:    xor    %eax,%eax
   0x00000000000028e4 <+24>:    movl   $0x0,0x24(%rsp)
   0x00000000000028ec <+32>:    lea    0x18(%rsp),%rcx
   0x00000000000028f1 <+37>:    lea    0x14(%rsp),%rdx
   0x00000000000028f6 <+42>:    sub    $0x8,%rsp
   0x00000000000028fa <+46>:    lea    0x18(%rsp),%rax
   0x00000000000028ff <+51>:    push   %rax
   0x0000000000002900 <+52>:    lea    0x1c(%rsp),%rax
   0x0000000000002905 <+57>:    push   %rax
   0x0000000000002906 <+58>:    lea    0x3c(%rsp),%rax
   0x000000000000290b <+63>:    push   %rax
   0x000000000000290c <+64>:    lea    0x40(%rsp),%r9
   0x0000000000002911 <+69>:    lea    0x3c(%rsp),%r8
   0x0000000000002916 <+74>:    lea    0x189f(%rip),%rsi        # 0x41bc
   0x000000000000291d <+81>:    mov    $0x0,%eax
   0x0000000000002922 <+86>:    call   0x2330 <__isoc99_sscanf@plt>
   0x0000000000002927 <+91>:    add    $0x20,%rsp
   0x000000000000292b <+95>:    cmp    $0x6,%eax
   0x000000000000292e <+98>:    jle    0x2976 <phase_5+170>
   0x0000000000002930 <+100>:   sub    $0x8,%rsp
   0x0000000000002934 <+104>:   mov    0x18(%rsp),%eax
   0x0000000000002938 <+108>:   push   %rax
   0x0000000000002939 <+109>:   mov    0x1c(%rsp),%r9d
   0x000000000000293e <+114>:   mov    0x34(%rsp),%r8d
   0x0000000000002943 <+119>:   mov    0x30(%rsp),%ecx
   0x0000000000002947 <+123>:   mov    0x2c(%rsp),%edx
   0x000000000000294b <+127>:   mov    0x28(%rsp),%esi
   0x000000000000294f <+131>:   mov    0x24(%rsp),%edi
   0x0000000000002953 <+135>:   call   0x2881 <fun5>
   0x0000000000002958 <+140>:   add    $0x10,%rsp
   0x000000000000295c <+144>:   cmp    $0x1,%eax
   0x000000000000295f <+147>:   jne    0x297d <phase_5+177>
   0x0000000000002961 <+149>:   mov    0x28(%rsp),%rax
   0x0000000000002966 <+154>:   sub    %fs:0x28,%rax
   0x000000000000296f <+163>:   jne    0x2984 <phase_5+184>
   0x0000000000002971 <+165>:   add    $0x38,%rsp
   0x0000000000002975 <+169>:   ret    
   0x0000000000002976 <+170>:   call   0x2dbe <explode_bomb>
   0x000000000000297b <+175>:   jmp    0x2930 <phase_5+100>
   0x000000000000297d <+177>:   call   0x2dbe <explode_bomb>
   0x0000000000002982 <+182>:   jmp    0x2961 <phase_5+149>
   0x0000000000002984 <+184>:   call   0x2280 <__stack_chk_fail@plt>
End of assembler dump.

Secret Phase: 

(gdb) disas secret_phase
Dump of assembler code for function secret_phase:
   0x00000000000029ca <+0>:     endbr64 
   0x00000000000029ce <+4>:     push   %rbx
   0x00000000000029cf <+5>:     call   0x2e45 <read_line>
   0x00000000000029d4 <+10>:    mov    %rax,%rdi
   0x00000000000029d7 <+13>:    mov    $0xa,%edx
   0x00000000000029dc <+18>:    mov    $0x0,%esi
   0x00000000000029e1 <+23>:    call   0x2310 <strtol@plt>
   0x00000000000029e6 <+28>:    mov    %eax,%ebx
   0x00000000000029e8 <+30>:    sub    $0x1,%eax
   0x00000000000029eb <+33>:    cmp    $0x3e8,%eax
   0x00000000000029f0 <+38>:    ja     0x2a18 <secret_phase+78>
   0x00000000000029f2 <+40>:    mov    %ebx,%esi
   0x00000000000029f4 <+42>:    lea    0x4b35(%rip),%rdi        # 0x7530 <n1>
   0x00000000000029fb <+49>:    call   0x2989 <fun6>
   0x0000000000002a00 <+54>:    cmp    $0x2,%eax
   0x0000000000002a03 <+57>:    jne    0x2a1f <secret_phase+85>
   0x0000000000002a05 <+59>:    lea    0x17ec(%rip),%rdi        # 0x41f8
   0x0000000000002a0c <+66>:    call   0x2250 <puts@plt>
   0x0000000000002a11 <+71>:    call   0x2f7d <phase_defused>
   0x0000000000002a16 <+76>:    pop    %rbx
   0x0000000000002a17 <+77>:    ret    
   0x0000000000002a18 <+78>:    call   0x2dbe <explode_bomb>
   0x0000000000002a1d <+83>:    jmp    0x29f2 <secret_phase+40>
   0x0000000000002a1f <+85>:    call   0x2dbe <explode_bomb>
   0x0000000000002a24 <+90>:    jmp    0x2a05 <secret_phase+59>
End of assembler dump.
